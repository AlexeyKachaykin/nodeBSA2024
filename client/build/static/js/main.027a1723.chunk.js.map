{"version":3,"sources":["services/requestHelper.js","services/domainRequest/auth.js","services/localStorageHelper.js","services/authService.js","components/signIn/index.jsx","services/domainRequest/userRequest.js","components/signUp/index.jsx","components/signInUpPage/index.jsx","services/domainRequest/fightersRequest.js","components/newFighter/index.jsx","components/fighter/index.jsx","components/fight/index.jsx","components/signOut/index.jsx","components/startScreen/index.jsx","App.js","serviceWorker.js","index.js"],"names":["get","entityName","id","makeRequest","post","body","path","method","url","fetch","JSON","stringify","undefined","headers","res","json","dataObj","ok","alert","message","console","error","login","setLocalStorageItem","key","val","value","localStorage","setItem","isSignedIn","data","getItem","parse","getObjectFromLocalStorage","setLoginSession","user","i","useStyles","makeStyles","theme","root","margin","spacing","width","SignIn","setIsLoggedIn","classes","useState","email","setEmail","password","setPassword","onSubmit","className","noValidate","autoComplete","onChange","event","target","label","placeholder","type","Button","onClick","variant","color","createUser","SignUp","firstName","setFirstName","lastName","setLastName","phoneNumber","setPhoneNumber","signPages","SignInSignUpPage","state","index","setIndex","setState","this","props","React","getFighters","createFighter","NewFighter","onCreated","name","setName","power","setPower","defense","setDefense","Number","formControl","minWidth","selectEmpty","marginTop","Fighter","fightersList","onFighterSelect","selectedFighter","fighter","setFighter","FormControl","InputLabel","Select","labelId","map","it","health","Fight","fighters","fighter1","fighter2","onFightStart","onCreate","onFighter1Select","onFighter2Select","getFighter1List","filter","getFighter2List","Component","SignOut","onSignOut","StartScreen","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.027a1723.chunk.js","sourcesContent":["const apiUrl = '/api';\n\nexport const get = async (entityName, id = '') => {\n    return await makeRequest(`${entityName}/${id}`, 'GET');\n}\n\nexport const post = async (entityName, body) => {\n    return await makeRequest(entityName, 'POST', body);\n}\n\nexport const patch = async (entityName, id, body) => {\n    return await makeRequest(`${entityName}/${id}`, 'PATCH', body);\n}\n\nexport const deleteReq = async (entityName, id) => {\n    return await makeRequest(`${entityName}/${id}`, 'DELETE');\n}\n\nconst makeRequest = async (path, method, body) => {\n    try {\n        const url = `${apiUrl}/${path}`\n        const res = await fetch(url, {\n            method,\n            body: body ? JSON.stringify(body) : undefined ,\n            headers: { \"Content-Type\": \"application/json\" }\n        });\n\n        const dataObj = await res.json();\n\n        if(res.ok) {\n            return dataObj;\n        }\n\n        alert(`${dataObj.message}`);\n        return dataObj;\n    } catch (err) {\n        console.error(err);\n    }\n}","import { post } from \"../requestHelper\"\n\nexport const login = async (body) => {\n    return await post('auth/login', body);\n}","export const setLocalStorageItem = (key, val) => {\n    const value = typeof val === 'object' ? JSON.stringify(val) : val;\n    localStorage.setItem(key, value);\n}\n\nexport const getObjectFromLocalStorage = (key) => {\n    const data = localStorage.getItem(key);\n    if(data) {\n        return JSON.parse(data);\n    }\n    return null;\n}","import { setLocalStorageItem, getObjectFromLocalStorage } from \"./localStorageHelper\";\n\nexport const isSignedIn = () => {\n    const user = getObjectFromLocalStorage('user');\n    return user ? true : false;\n};\n\nexport const setLoginSession = (user) => {\n    setLocalStorageItem('user', user);\n}\n\nexport const unsetLoginSession = () => {\n    setLocalStorageItem('user', null);\n}","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from 'material-ui';\nimport { Button } from '@material-ui/core';\n\nimport './signIn.css';\nimport { login } from '../../services/domainRequest/auth';\nimport { setLoginSession } from '../../services/authService';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n}));\n\nexport default function SignIn({ setIsLoggedIn }) {\n    const classes = useStyles();\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n\n    const onEmailChange = (event) => {\n        setEmail(event.target.value);\n    }\n\n    const onPasswordChange = (event) => {\n        setPassword(event.target.value);\n    }\n\n    const onSubmit = async () => {\n        const data = await login({ email, password });\n        if(data && !data.error) {\n            setLoginSession(data);\n            setIsLoggedIn(true);\n        }\n    }\n\n    return (\n        <form className={classes.root} noValidate autoComplete=\"off\">\n            <TextField onChange={onEmailChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Email\"/>\n            <TextField onChange={onPasswordChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Password\" type=\"password\"/>\n            <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">Sign In</Button>\n        </form>\n    )\n}","import { post } from \"../requestHelper\";\nconst entity = 'users'\n\nexport const createUser = async (body) => {\n    return await post(entity, body);\n}","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from 'material-ui';\nimport { Button } from '@material-ui/core';\n\nimport { createUser } from '../../services/domainRequest/userRequest';\nimport { setLoginSession } from '../../services/authService';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n}));\n\nexport default function SignUp({ setIsLoggedIn }) {\n    const classes = useStyles();\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [firstName, setFirstName] = useState();\n    const [lastName, setLastName] = useState();\n    const [phoneNumber, setPhoneNumber] = useState();\n\n    const onEmailChange = (event) => {\n        setEmail(event.target.value);\n    }\n\n    const onPasswordChange = (event) => {\n        setPassword(event.target.value);\n    }\n\n    const onFirstNameChange = (event) => {\n        setFirstName(event.target.value);\n    }\n\n    const onLastNameChange = (event) => {\n        setLastName(event.target.value);\n    }\n\n    const onPhoneNumberChange = (event) => {\n        setPhoneNumber(event.target.value);\n    }\n    \n\n    const onSubmit = async () => {\n        const data = await createUser({ email, password, firstName, lastName, phoneNumber });\n        if(data && !data.error) {\n            setLoginSession(data);\n            setIsLoggedIn(true);\n        }\n    }\n\n    return (\n        <form className={classes.root} noValidate autoComplete=\"off\">\n            <TextField key=\"first-name\" onChange={onFirstNameChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"First Name\"/>\n            <TextField key=\"last-name\" onChange={onLastNameChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Last Name\"/>\n            <TextField key=\"email\" onChange={onEmailChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Email\"/>\n            <TextField key=\"phone\" onChange={onPhoneNumberChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Phone Number\"/>\n            <TextField key=\"password\" onChange={onPasswordChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Password\" type=\"password\"/>\n            <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">Sign Up</Button>\n        </form>\n    )\n}","import * as React from 'react';\nimport './signInUpPage.css';\nimport SignIn from '../signIn';\nimport SignUp from '../signUp';\n\nconst signPages = {\n    signIn: 0,\n    signUp: 1\n};\n\nclass SignInSignUpPage extends React.Component {\n    state = {\n        index: signPages.signUp\n    };\n\n    setIndex = (index) => {\n        this.setState({ index });\n    }\n\n    render() {\n        const { index } = this.state;\n\n        return (\n            <div id=\"sign-in-up\">\n                <div id=\"form-wrapper\">\n                    <div className=\"header\">\n                        <div onClick={() => this.setIndex(signPages.signIn)} className={`${index === signPages.signIn ? 'active' : ''}`}>Sign In</div>\n                        <div onClick={() => this.setIndex(signPages.signUp)} className={`${index === signPages.signUp ? 'active' : ''}`}>Sign Up</div>\n                    </div>\n                    {index === signPages.signIn ? <SignIn setIsLoggedIn={this.props.setIsLoggedIn} /> : <SignUp setIsLoggedIn={this.props.setIsLoggedIn}/>}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default SignInSignUpPage;","import { get, post } from \"../requestHelper\";\n\nconst entity = 'fighters';\n\nexport const getFighters = async () => {\n    return await get(entity);\n}\n\nexport const createFighter = async (body) => {\n    return await post(entity, body);\n}","import { TextField } from \"material-ui\"\nimport { createFighter } from \"../../services/domainRequest/fightersRequest\";\nimport React, { useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport './newFighter.css';\n\nexport default function NewFighter({ onCreated }) {\n    const [name, setName] = useState();\n    const [power, setPower] = useState();\n    const [defense, setDefense] = useState();\n\n    const onNameChange = (event) => {\n        setName(event.target.value);\n    }\n\n    const onPowerChange = (event) => {\n        const value = event.target.value || event.target.value === 0 ? Number(event.target.value) : null;\n        setPower(value);\n    }\n\n    const onDefenseChange = (event) => {\n        const value = event.target.value || event.target.value === 0 ? Number(event.target.value) : null;\n        setDefense(value);\n    }\n\n    const onSubmit = async () => {\n        const data = await createFighter({ name, power, defense });\n        if(data && !data.error) {\n            onCreated(data);\n        }\n    }\n\n    return (\n        <div id=\"new-fighter\">\n            <div>New Fighter</div>\n            <TextField onChange={onNameChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Name\"/>\n            <TextField onChange={onPowerChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Power\" type=\"number\" />\n            <TextField onChange={onDefenseChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Defense\" type=\"number\" />\n            <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">Create</Button>\n        </div>\n    );\n};","import React, { useState } from 'react';\nimport { FormControl, InputLabel, makeStyles, Select } from '@material-ui/core';\nimport { MenuItem } from 'material-ui';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function Fighter({ fightersList, onFighterSelect, selectedFighter }) {\n    const classes = useStyles();\n    const [fighter, setFighter] = useState();\n\n    const handleChange = (event) => {\n        debugger;\n        setFighter(event.target.value);\n        onFighterSelect(event.target.value);\n    };\n\n    return (\n        <div>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"simple-select-label\">Select Fighter</InputLabel>\n                <Select\n                    labelId=\"simple-select-label\"\n                    id=\"simple-select\"\n                    value={fighter}\n                    onChange={handleChange}\n                >\n                    {fightersList.map((it, index) => {\n                        return (\n                            <MenuItem key={`${index}`} value={it}>{it.name}</MenuItem>\n                        );\n                    })}\n                </Select>\n                {selectedFighter\n                    ? <div>\n                        <div>Name: {selectedFighter.name}</div>\n                        <div>Power: {selectedFighter.power}</div>\n                        <div>Defense: {selectedFighter.defense}</div>\n                        <div>Health: {selectedFighter.health}</div>\n                    </div>\n                    : null\n                }\n            </FormControl>\n        </div>)\n}\n","import React from 'react';\n\nimport { getFighters } from '../../services/domainRequest/fightersRequest';\nimport NewFighter from '../newFighter';\nimport Fighter from '../fighter';\nimport { Button } from '@material-ui/core';\n\nimport './fight.css'\n\nclass Fight extends React.Component {\n    state = {\n        fighters: [],\n        fighter1: null,\n        fighter2: null\n    };\n\n    async componentDidMount() {\n        const fighters = await getFighters();\n        if(fighters && !fighters.error) {\n            this.setState({ fighters });\n        }\n    }\n\n    onFightStart = () => {\n        \n    }\n\n    onCreate = (fighter) => {\n        this.setState({ fighters: [...this.state.fighters, fighter] });\n    }\n\n    onFighter1Select = (fighter1) => {\n        this.setState({fighter1 });\n    }\n\n    onFighter2Select = (fighter2) => {\n        this.setState({ fighter2 });\n    }\n\n    getFighter1List = () => {\n        const { fighter2, fighters } = this.state;\n        if(!fighter2) {\n            return fighters;\n        }\n\n        return fighters.filter(it => it.id !== fighter2.id);\n    }\n\n    getFighter2List = () => {\n        const { fighter1, fighters } = this.state;\n        if(!fighter1) {\n            return fighters;\n        }\n\n        return fighters.filter(it => it.id !== fighter1.id);\n    }\n\n    render() {\n        const  { fighter1, fighter2 } = this.state;\n        return (\n            <div id=\"wrapper\">\n                <NewFighter onCreated={this.onCreate} />\n                <div id=\"figh-wrapper\">\n                    <Fighter selectedFighter={fighter1} onFighterSelect={this.onFighter1Select} fightersList={this.getFighter1List() || []} />\n                    <div className=\"btn-wrapper\">\n                        <Button onClick={this.onFightStart} variant=\"contained\" color=\"primary\">Start Fight</Button>\n                    </div>\n                    <Fighter selectedFighter={fighter2} onFighterSelect={this.onFighter2Select} fightersList={this.getFighter2List() || []} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Fight;","import { unsetLoginSession } from \"../../services/authService\";\nimport React from 'react';\nimport './signOut.css';\n\nexport default function SignOut({ isSignedIn, onSignOut}) {\n    const signOut = () => {\n        unsetLoginSession();\n        onSignOut();\n    }\n\n    if(isSignedIn) {\n        return (\n            <div onClick={signOut} id=\"sign-out\">Sign out</div>\n        )\n    }\n\n    return null;\n}","import * as React from 'react';\nimport SignInUpPage from '../signInUpPage';\nimport { isSignedIn } from '../../services/authService';\nimport Fight from '../fight';\nimport SignOut from '../signOut';\n\nclass StartScreen extends React.Component {\n    state = {\n        isSignedIn: false\n    };\n\n    componentDidMount() {\n        this.setIsLoggedIn(isSignedIn());\n    }\n\n    setIsLoggedIn = (isSignedIn) => {\n        this.setState({ isSignedIn });\n    }\n\n    render() {\n        const { isSignedIn } = this.state;\n        if (!isSignedIn) {\n            return <SignInUpPage setIsLoggedIn={this.setIsLoggedIn} />\n        }\n\n        return (\n            <>\n                <Fight />\n                <SignOut isSignedIn={isSignedIn} onSignOut={() => this.setIsLoggedIn(false)} />\n            </>\n        );\n    }\n}\n\nexport default StartScreen;","import React from 'react';\nimport StartScreen from './components/startScreen'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <MuiThemeProvider>\n      <StartScreen />\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}